Revision history for perl distribution JSON-Validator

4.15 Not Released
 - Removed deprecated functions joi() and validate_json()
 - Removed deprecated methods singleton() and version()
 - Fix t/id-keyword-draft*.t test failures with Mojolicious 9.11 #242

4.14 2021-02-23T14:58:07+0900
 - Add routes() to Schema::OpenAPIv2 and OpenAPIv3

4.13 2021-01-28T18:22:43+0900
 - Fix handling offset in RFC3339 date-time #236
 - Add CLEAR method to JSON::Validator::Ref #237

4.12 2021-01-25T07:52:34+0900
 - Fix not using Mojo::Exception::raise() #235
 - Fix uninitialized warning when looking up schema for an internal $ref

4.11 2021-01-24T16:02:02+0900
 - Add JSON::Validator::Schema::OpenAPIv2
   * Extends JSON::Validator::Schema::Draft4
   * Can validate OpenAPIv2 API specifiation
   * Can validate HTTP request and response
   * Can validate "Accept" and "Content-Type"
   * Can handle "discriminator"
   * Can handle "readOnly" parameters
   * Can handle collectionFormat
   * Can handle default values for parameters
   * Can convert specifiation with invalid "$ref" into a valid OpenAPIv2 specifiation
   * Will coerce query parameters and headers into arrays if needed
 - Add JSON::Validator::Schema::OpenAPIv3
   * Extends JSON::Validator::Schema::Draft201909
   * Can validate OpenAPIv3 API specifiation
   * Can validate HTTP request and response
   * Can validate "Accept" and "Content-Type"
   * Can handle "discriminator"
   * Can handle "nullable" parameters
   * Can handle "readOnly" parameters
   * Can handle "style" and "explode" for arrays and objects parameters
   * Can handle "writeOnly" parameters
   * Can handle default values for parameters
   * Will coerce query parameters and headers into arrays if needed
 - Add negotiate_content_type() utility function
 - Fix t/load-file.t on Windows #234
 - Fix not checking if input schema is a file if it has a newline #223 #233
   Contributor: David Cantrell
 - Improved error message when loading non-existing file #231

4.10 2020-10-13T10:53:11+0900
 - Add JSON::Validator::Store
 - Changed JSON::Validator->schema() to also load
 - JSON::Validator->schema() can handle draft 2019-09 schemas
 - Documented what is not supported in draft 2019-09

4.09 2020-10-12T11:04:16+0900
 - Fix handling if "id" and "$id" in subschemas #186
 - Add CONTRIBUTING.md #161

4.08 2020-10-12T08:06:29+0900
 - Implemented basic support for draft 2019-09 #181
 - JSON::Validator::Ref can hold sibling attrs #181

4.07 2020-10-11T11:48:05+0900
 - Acceptance tests require Test::JSON::Schema::Acceptance 1.000

4.06 2020-10-10T16:21:51+0900
 - Fix caching of schemas across objects #204 #212
   Contributor: Karen Etheridge
 - Fix "contains" can also be boolean "false"
 - Fix "dependencies" can have boolean subschemas
 - Fix "if" can be false
 - Fix "null" is valid if "pattern" is defined, but no "type"
 - Fix "propertyNames" can be false
 - Fix JSON::Validator::Ref can hold a boolean schema
 - Fix not adding "properties" to the input schema
 - Fix resolving "$ref":"#id"
 - Fix validating data when "additionalItems" is false, but there are enough rules
 - Changed internals of JSON::Validator::Ref

4.05 2020-10-06T06:29:31+0900
 - Errors are now reported in a predictable order #223
   Contributor: David Cantrell

4.04 2020-09-28T10:01:58+0900
 - Add "validator" as attribute to JSON::Validator::Joi
 - Changed YAML::XS to an optional module #205
 - Changed column with to be in sync with mojolicious/mojo
 - Fix constructing schema() from correct class

4.03 2020-09-14T18:14:19+0900
 - Add "joi" as exported function to JSON::Validator::Joi
 - Fix SYNOPSIS for JSON::Validator::Joi

4.02 2020-08-11T13:06:40+0900
 - Add recursive_data_protection() #220
   Contributor: Jason Cooper

4.01 2020-06-30T17:42:08+0900
 - Fix combining "allOf" and "not" #218

4.00 2020-06-08T10:41:55+0900
 - JSON::Validator::schema() now holds a JSON::Validator::Schema object
   instead of Mojo::JSON::Pointer
 - Add schema classes for Draft4, Draft6 and Draft7
 - Add "duration" and "uuid" formats #210
 - Fix coercing boolean "false" #215
 - Fix not matching "null" should also be a "type" error #217
 - Deprecated JSON::Validator::joi()
 - Deprecated JSON::Validator::singleton()
 - Deprecated JSON::Validator::validate_json()
 - Deprecated JSON::Validator::version()
 - Removed JSON::Validator::generate_definitions_path()
 - Removed support for JSON::Validator::bundle({ref_key => ...})

3.25 2020-03-26T07:42:16+0900
 - Made "additionalProperties" error message less confusing
 - Add support for "items" and "contains" can be defined-but-false #207
   Contributor: Karen Etheridge
 - Respect "items" when combined with "contains" #207
   Contributor: Karen Etheridge
 - Require Sereal::Encoder 4.00 to speed up data_checksum()

3.24 2020-03-03T15:46:39+0900
  - Optimize checksum generation #202
    Contributor: Ere Maijala
  - Improved "type":[...] error messages #199
    Contributor: Karen Etheridge
  - Fix handle validation of true, false schemas in oneOf #201 #203
    Contributor: Karen Etheridge
  - Fix guessing type:object if "dependencies" is present #206

3.23 2020-02-19T09:37:44+0900
 - Using List::Util::uniq() instead of JSON::Validator::Util::uniq() #198

3.22 2020-02-15T08:35:29+0900
 - Add support for "dependencies" keyword #192 #197
   Contributor: Karen Etheridge
 - Add support for anyOf/allOf/oneOf at the same time #196 #197
   Contributor: Karen Etheridge
 - Allow if/then/else to be in any sort of schema #190 #197
   Contributor: Karen Etheridge

3.21 2020-02-14T10:14:14+0900
 - Fix data_section() without a class #193

3.20 2020-02-12T09:47:21+0900
 - Fix validating draft6 "false" and "true" schemas #190
   Contributor: Karen Etheridge
 - Add JSON::Validator::Util with E(), data_checksum(), data_section(),
   data_type(), is_type(), schema_extract(), json_pointer(),
   prefix_errors(), schema_type() and uniq()
 - Removed support for JSON_VALIDATOR_REPORT

3.19 2020-02-07T11:10:58+0900
 - Add clearer error when more than one oneOf rule matched #184
   Contributor: Karen Etheridge
 - Improved validation of numeric minimum and maximum values

3.18 2020-01-29T10:18:09+0900
 - Fix validating constants that are null or the empty string
   Contributor: Karen Etheridge

3.17 2019-12-29T14:21:53+0900
 - Fix for deep recursion on Windows #170
 - Fix reading unicode specifiation from __DATA__ #179

3.16 2019-10-28T13:59:47+0900
 - Add generate_definitions_path() #175 #177
   Contributor: Henrik Andersen, Jan Henning Thorsen

3.15 2019-09-27T09:28:32+0900
 - Add JSON::Validator::Error->details() #133
 - Reversed the checksum and nice name for generated definitions #173

3.14 2019-08-09T23:52:24+0200
 - Fix failing tests #169

3.13 2019-08-08T16:27:29+0200
 - Fix extend() should not mutate the source objects #167

3.12 2019-08-08T12:02:14+0200
 - Fix bug: Joi->extend(...) will also merge "required" #166
 - Fix deprecation warning from $joi->validate #165
   Contributor: Mattias Päivärinta
 - Fix loading Time::Local in the correct module #163
   Contributor: Bernhard Graf

3.11 2019-05-07T21:53:16+0700
 - Bundle https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v3.0/schema.json #157

3.10 2019-05-05T14:32:15+0700
 - Should not add "/definitions" to bundle, if there are no definitions
 - A bit too soon to deprecate bundle({replace => 1}) in 3.09

3.09 2019-05-04T22:28:55+0700
 - Prettier definition names from bundle().
 - Changed default bundle() definitions location from "x-bundle" to "definitions".
 - Deprecated bundle({ref_key => ...})
 - Deprecated bundle({replace => ...})

3.08 2019-04-06T15:07:11+0700
 - Add support for "default" in object definitions #155
 - Add support for coerce("bool,def,num,str") as alternative to hash
 - Add support for setting coerce in new()
 - Deprecated support for coerce(1)

3.07 2019-04-04T23:43:55+0700
 - Fix not leaking file names with bundle()

3.06 2019-02-14T18:24:29+0100
 - Fix coercing integers and numbers #147
 - Changed recursion guard to not keeping tracking of plain scalars #147

3.05 2019-01-31T08:45:14+0900
 - Removed testing Mojo::JSON::MaybeXS, since Mojo::JSON loads Cpanel::JSON::XS

3.04 2019-01-21T09:39:50+0900
 - Fix "uri" check, so that it only accept ASCII characters. Note that this
   fix might be an undesired change for your application. If so, then update
   the "uri" format in your schema to "iri".
 - Fix "hostname" format check, so it does not require a valid TLD
 - Fix validating draft-07 schema against itself #144
 - Add support for more formats in JSON Schema draft-6 and 7: date, idn-email,
   idn-hostname, iri, iri-reference, json-pointer, relative-json-pointer, time,
   uri-reference and uri-template.
 - Add support for more keywords in draft-07
   * 6.4.6. Arrays - contains
   * 6.5.8. Objects - propertyNames
   * 6.6.1. Objects - if
   * 6.6.2. Objects - then
   * 6.6.3. Objects - else

3.03 2019-01-19T12:11:34+0900
 - Add JSON::Validator::Formats with format checks
   Note that these functions work by returning a string on error, instead of
   true on sucches, which was a breaking change introduced in the 3.00 release.

3.02 2019-01-07T09:52:31+0900
 - Trying to fix more failing test reports from the smokers

3.01 2019-01-06T08:16:33+0900
 - Fix t/jv-formats.t #140

3.00 2019-01-05T13:13:49+0900
 - Add enum() to Joi
 - Add support for a list of types passed on to Joi #136
 - Add support for file:// scheme in $ref #138
 - Fix $ref resolving after fixes applied to Mojo::JSON::Pointer in
   Mojolicious 8.11 #139
 - Fix cases where input was not coerced
 - Breaking change: format callbacks need to return undef on success and a
   description on error.
 - Changed Joi to always coerce values
 - Removed JSON::Validator::OpenAPI

2.19  2018-12-07
 - Fix random errors when "type" is a list #126
 - Moved JSON::Validator::OpenAPI::Mojolicious to Mojolicious-Plugin-OpenAPI
 - Removed JSON::Validator::OpenAPI::Dancer2

2.18  2018-11-15
 - Add EXPERIMETNAL support for data:// without a package

2.17  2018-11-14
 - Add basic support for OpenAPI v3

2.16  2018-11-14
 - Improved openapi "date" format validation #123
   Contributor: Jason Cooper

2.15  2018-11-07
 - Did not need to bump Mojolicious version in 2.15 #122
   Contributor: Dagfinn Ilmari Mannsåker

2.14  2018-10-26
 - Fix guessing schema type from "required" key #118
 - Fix appending parameters for Mojolicious 8.00 #119 #120
 - Improved error return values from allOf, anyOf and oneOf validation
 - Will not overwrite OpenAPI "/info/version" from "version_from_class"

2.13  2018-10-17
 - Compatible with weak attrs in Mojolicious 8.03

2.12  2018-10-03
 - Improved error message when $ref is pointing to a non-existing file

2.11  2018-09-30
 - Skipping load-from-app.t on "Gateway Timeout" as well

2.10  2018-09-26
 - Fix handling of directory name with RFC 3986 reserved chars
   Contributor: Ed J

2.09  2018-09-26
 - Skip "remote ref" tests when running through cpantesters

2.08  2018-06-03
 - Fix validating oneOf correctly #103
 - Fix validating "id" property #111
 - Add support for $id keyword in draft-07 #114
 - Bundle JSON Schema draft-06 and draft-07

2.07  2018-04-18
 - Fix joi->object->strict()
   Contributor: Pierre-Aymeric Masse

2.06  2018-04-09
 - Fix normalising file names on windows #102
 - Prevent "Use of uninitialized value $pointer in length..." for older Perls #104
 - Removed warning about coercion now, since it works well

2.05  2018-03-11
 - Fix hash randomization problem fot t/get.t #101

2.04  2018-03-10
 - Add JSON::Validator::JOI and joi() #63
 - Add support for get(|"x", undef, "y"])
 - Will catch if more than one parameter has "in":"body" #97
 - Fix file-path with ".." gets false negative for same-ref check #99

2.03  2018-02-15
 - Will not leak file system information to bundled schema

2.02  2018-01-30
 - Will let the user know if YAML::XS 0.67 (or later) need to be installed

2.01  2018-01-26
 - Fix bundle method not spotting "local" fqn when schema from URL
 - Forgot to remove deprecated JSON_VALIDATOR_CACHE_DIR in 2.00

2.00  2018-01-19
 - Fix validating against any enum value #22
 - Require YAML::XS 0.67 for proper boolean handling
 - Removed support for parsing YAML with YAML::Syck
 - Removed deprecated method load_and_validate_spec()

1.08  2017-12-24
 - Fix setting default value from $ref jhthorsen/mojolicious-plugin-openapi#53
 - Skip load-from-app.t if "Service Unavailable"

1.07  2017-11-27
 - Can load schame from internal app #85

1.06  2017-11-19
 - Add JSON::Validator::get()
 - Add JSON::Validator::bundle()
 - A $ref is tied hashes, represented by JSON::Validator::Ref

1.05  2017-10-22
 - Fix validating headers regardless of case #77
   Contributor: Aleksandr Orlenko
 - Improved boolean handling #76
   Contributor: Aleksandr Orlenko
 - Improved URI validation, fixes #74
 - Resolving "$ref" on the fly #65 #75 #79

1.04  2017-10-05
 - Avoid autovivification of "patternProperties" in the input schema #47

1.03  2017-09-25
 - Fix "uri" format validation, closes #70

1.02  2017-09-01
 - Fix validating "type" and "enum" #69

1.01  2017-08-19
 - Add support for fetching specification from local application

1.00  2017-06-20
 - Removed EXPERIMENTAL from JSON::Validator::OpenAPI (1.00)
 - Coerce integer numbers into booleans #67
   Contributor: @fabzzap

0.99  2017-06-12
 - Hopefully fixed some Windows issues #60

0.98  2017-05-21
 - Add support for "const" #62
   Contributor: Kevin Goess

0.97  2017-03-21
 - Require a newer version of Test::More to build

0.96  2017-03-06
 - Fix JSON::Validator::load_and_validate_schema()
 - Add handling of header/formData/query as array #38
 - Allow alternative date-time separator #49
 - Improved recursion tracking #52
 - More tests in t/acceptance.t are ok #52
 - Avoid loading the same file multiple times #54
 - Swagger2 is deprecated

0.95  2017-03-02
 - Add support for format "password"
 - Add load_and_validate_schema() to JSON::Validator #51
 - Started deprecating load_and_validate_spec()

0.94  2017-02-13
 - Fix t/issue-27-yaml-syck-false.t
 - Removed Carp::Always #47

0.93  2017-02-13
 - Fix coercing YAML booleans in input specification jhthorsen/mojolicious-plugin-openapi#24
 - Replace JSON_VALIDATOR_CACHE_DIR with JSON_VALIDATOR_CACHE_PATH
 - Remove deprecated cache_dir attribute

0.92  2017-01-18
 - Fix infinite recursion when resolving self referencing data structures

0.91  2017-01-10
 - Mojo::Util::slurp is DEPRECATED in favor of Mojo::File::slurp

0.90  2016-12-11
 - Add support for validating Dancer2 requset/responses #34
 - Fix invalidating integer/number path part with letters #37

0.89  2016-11-05
 - Fix multipleOf:0.01, closes #35

0.88  2016-11-04
 - Fix number coercion #32
   Contributor: @melhesedek
 - Add JSON::Validator::OpenAPI->load_and_validate_spec()

0.87  2016-10-20
 - Fix validating data when boolean.pm is loaded

0.86  2016-10-06
 - Documented bundled resources

0.85  2016-09-26
 - Fix handling of collectionFormat where no input is defined

0.84  2016-08-19
 - Removed support for passing $json_path to validate()
 - Fix guessing type of objects that has TO_JSON()

0.83  2016-08-16
 - Fix handling of true/false in schema, when loaded with YAML::Syck #27
 - Add EXPERIMENTAL support for passing $json_path to validate()

0.82  2016-08-09
 - Fix finding all $ref occurances jhthorsen/swagger2#95

0.81  2016-08-08
 - Add support for multiple cache dir search paths
 - Deperecated cache_dir()
 - Fix recurring requests with same path part jhthorsen/swagger2#93
 - Fix "Use of uninitialized value $schema_type..." warnings

0.80  2016-08-03
 - Fix parsing recursive schema

0.79  2016-07-28
 - Reverted improved allOf, anyOf and oneOf error messages

0.78  2016-07-28
 - Fix recursive dependencies #23
 - Add EXPERIMENTAL resolver attribute
 - Improved allOf, anyOf and oneOf error messages

0.77  2016-07-26
 - Avoid duplicate error messages with enum #22
 - Fix "false" must be false and not true in OpenAPI

0.76  2016-07-25
 - Will write default values into Mojolicious::Controller

0.75  2016-07-02
 - Fix uploads must not be slurped
 - Fix reporting error on missing response status definition
 - Add warnings on invalid (Perl) regexes

0.74  2016-06-22
 - Fix length($data) need be defined in 5.10

0.73  2016-06-22
 - Add http://git.io/vcKD4 error schema to cache
 - Add JSON schema for JSONPatch files
 - Updated Swagger2 spec to https://github.com/OAI/OpenAPI-Specification/blob/19fed9f0f812ccebe0fc45313fea75bb6656de1c/schemas/v2.0/schema.json

0.72  2016-06-10
 - Fix default cache_dir() path
 - JSON::Validator is no longer EXPERIMENTAL
 - Move Swagger2::SchemaValidator into JSON::Validator::OpenAPI

0.71  2016-06-07
 - Fix setting schema() inside validate()

0.70  2016-05-31
 - Fix allowing "id" as property name in objects

0.69  2016-05-26
 - Fix failing anyOf logic in t/swagger-validate-response-object.t

0.68  2016-05-25
 - Remove _merge_error to clarify anyOf errors #15

0.67  2016-04-11
 - Add JSON::Validator::Error class

0.66  2016-02-09
 - Fix validating recursive datastructures

0.65  2016-01-07
 - Fix t/swagger-validate-response-object.t require Swagger2 0.66 #14

0.64  2015-12-18
 - Fix treating JSON::PP::Boolean objects as boolean #13
   Contributor: Krasimir Berov
 - Allow hash reference as arguments to coerce #13
   Contributor: Krasimir Berov

0.63  2015-11-28
 - Fix skip test in t/booleans.t

0.62  2015-11-27
 - Remove support for YAML.pm #jhthorsen/swagger2#50
 - Remove support for YAML::Tiny #jhthorsen/swagger2#50

0.61  2015-11-11
 - Fix use of TO_JSON() on objects inside arrays #12

0.60  2015-11-09
 - Can use TO_JSON() when validating perl objects

0.59  2015-10-14
 - Move "collectionFormat" support to Swagger2

0.58  2015-10-13
 - Fix string "0" is not detected as boolean

0.57  2015-10-11
 - Trust guesswork if input data is undefined

0.56  2015-09-30
 - Can read YAML::XS booleans automatically #8
 - Change coerce() into a method. #8
 - Remove EXPERIMENTAL coerce attribute #8
 - Remove EXPERIMENTAL JSON_VALIDATOR_COERCE_VALUES and SWAGGER_COERCE_VALUES #8

0.55  2015-09-29
 - Fix "required" cannot be a boolean on properties
 - Improved documentation of error object
 - Change anyOf/allOf/oneOf error message

0.54  2015-09-27
 - Add support for $ref to relative path #3 #4 #5
 - Removed Swagger specific type "file"
 - Removed Swagger specific formats: "byte", "date", "double", "float", "int32" and "int64".

0.53  2015-09-13
 - Fix properties, patternProperties, additionalProperties interaction - patternProperty invalidates property
 - Fix validation for a keyword and instance SHOULD succeed when keywords does not match primitive type
 - Fix allOf with base schema - mismatch base schema
 - Fix checking for a boolean "required"

0.52  2015-09-05
 - Add guessing of schema type, based on other attributes
 - More strict on what is validated as "boolean"
 - Fix additionalItems are allowed by default
 - Fix additionalProperties allows a schema which should validate
 - Fix validating "enum"
 - Fix validating "array" against "additionalItems"
 - Fix bugs after running
   https://github.com/Relequestual/Test-JSON-Schema-Acceptance to validate

0.51  2015-08-24
 - Fix "$ref" pointing to a file on disk #1

0.50  2015-08-23
 - Fix missing namespace when registering new document
 - Made cache_dir() public
 - Bundled spec for json-schema and swagger

0.49  2015-08-23
 - Fix loading schema from files

0.48  2015-08-22
 - Merged core functionality from Swagger2 and Swagger2::SchemaValidator
   into this module, JSON::Validator
   See https://metacpan.org/source/JHTHORSEN/Swagger2-0.47/Changes for
   previous Changes (<=0.47)
 - Fix coercing collectionFormat strings into integers and numbers
 - Add support for reading schemas from __DATA__ section
